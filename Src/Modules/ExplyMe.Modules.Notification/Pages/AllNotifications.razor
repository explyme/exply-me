@page "/notifications"

@attribute [Authorize]
@inject INotificationService NotificationService

<div class="row">
    <div class="col-10">
        @foreach (var notification in Notifications)
        {
            <div class="d-block card border mb-2 notification-link">
                <a class="row p-3 text-decoration-none text-primary" href="@notification.Url">
                    <div class="col-1">
                        <img class="thumbnail rounded-circle mx-auto" src="https://lh3.googleusercontent.com/ogw/ADGmqu_ps7JAJA3G_lDLW_osAjIbc9-SYg2DRQzD_FkJtg=s32-c-mo" />
                    </div>
                    <div class="col">
                        <span>@((MarkupString)notification.CompiledMessage)</span>
                    </div>
                </a>
            </div>
        }

        <button @onclick="(async () => await CreateNotification())" class="d-block btn btn-success btn-lg mx-auto my-4">Criar notificação</button>

        <button class="d-block btn btn-outline-primary btn-sm mx-auto my-4">Ver mais</button>
    </div>
    <div class="col-2">
    </div>
</div>

<style>
    .notification-link {
        transition: 0.2s;
        cursor: pointer
    }

        .notification-link:hover {
            background: var(--bs-light);
            transform: scale(1.04);
            box-shadow: 0px 0px 30px rgba(0,0,0,.2);
        }
</style>

@code {
    public static string Title => "Notificações";

    const long mockedUserId = 0;
    private IEnumerable<NotificationEntity> Notifications { get; set; } = new List<NotificationEntity>();

    protected override async Task OnInitializedAsync()
    {
        await RefreshNotifications();
    }

    private async Task RefreshNotifications()
    {
        Notifications = await NotificationService.FindNotificationsByUserIdAsync(mockedUserId);
    }

    private async Task CreateNotification()
    {
        await NotificationService.SendAsync(NotificationTypeEnum.Instructor_Confirmed_Schedule, mockedUserId, "https://google.com", new
        {
            InstructorName = "João da Silva",
            ScheduledTime = "13/01/2021 às 14:30"
        });

        await RefreshNotifications();
    }
}
