@inject IJSRuntime JsRuntime
@using Twilio.Jwt.AccessToken
@using ExplyMe.Infrastructure.Services.Interfaces
@inject IAppSettingsService AppSettings

<main class="mt-3 mx-auto" style="max-width: 800px">
    <div class="p-2 mb-2 d-block rounded-4 mt-2">
        <div class="row">
            <div class="col">
                <span class="d-inline-block bg-primary rounded-circle text-center text-white fw-light" style="width: 50px; height: 50px; line-height: 50px; font-size: 20px">YR</span>
                <div class="d-inline-block">
                    <strong class="d-block">
                        Yago Rocha
                    </strong>
                    <span class="text-secondary">Aula da escola de matemática.</span>
                </div>
            </div>
        </div>
    </div>

    <div id="remote-video" class="shadow position-relative d-block rounded-4 bg-dark overflow-hidden">
        <div id="personal-video" class="bg-dark shadow" autoplay></div>
    </div>
    <div class="py-2 d-flex justify-content-center rounded-4 mt-2">
        <div class="action-button">
            <button class="border shadow-sm">
                <i class="bi-camera-video-fill"></i>
            </button>
            <span>Cam</span>
        </div>

        <div class="action-button">
            <button class="border shadow-sm">
                <i class="bi-mic-fill"></i>
            </button>
            <span>Mic</span>
        </div>

        <div class="action-button">
            <button class="border shadow-sm">
                <i class="bi-telephone-x-fill text-danger"></i>
            </button>
            <span>Sair</span>
        </div>
    </div>
</main>

<style>
    .rounded-4 {
        border-radius: 15px;
    }

    #remote-video video {
        display: block;
        object-fit: cover;
        width: 100%;
        height: 100%;
    }

    #personal-video {
        position: absolute;
        bottom: 20px;
        right: 20px;
        z-index: 1;
        width: 100px;
        height: 100px;
        max-height: 100px;
        border-radius: 10px;
        overflow: hidden;
        border: 3px solid #FFF;
    }

        #personal-video video {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

    .action-button {
    }

        .action-button:not(:last-child) {
            margin-right: 10px;
        }

        .action-button button {
            border: none;
            width: 50px;
            height: 50px;
            border-radius: 20px;
            background: #FFF;
            color: var(--bs-dark);
            font-size: 20px;
            line-height: 0;
            transition: 0.2s;
            outline: none !important;
        }

            .action-button button:hover {
                transform: scale(1.15);
                box-shadow: 0 .5rem 1rem rgba(0,0,0,.11) !important;
            }

        .action-button span {
            display: block;
            color: var(--bs-secondary);
            font-size: 12px;
            text-align: center;
            margin-top: 5px;
        }
</style>

@code {
    [Parameter]
    public CallRoom RoomData { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await StartCall();
    }
}

@functions {
    async Task StartCall()
    {
        var accountSid = AppSettings.Get("TwilioAccountSid");
        var apiSid = AppSettings.Get("TwilioApiSid");
        var apiSecret = AppSettings.Get("TwilioApiSecret");

        var token = new Token(
            accountSid,
            apiSid,
            apiSecret,
            Guid.NewGuid().ToString(),
            grants: new HashSet<IGrant> { new VideoGrant() { Room = RoomData.TwilioUniqueName } })
        .ToJwt();

        await JsRuntime.InvokeVoidAsync("StartCall", token, RoomData.TwilioUniqueName);
    }
}