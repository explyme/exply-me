@page "/wallet"

@using ExplyMe.Modules.Wallet.Pages.Dashboard.Components

@attribute [Authorize]
@inject IWalletAccountService AccountService
@inject UserManager<User> UserManager

<GuaranteedWallet>
    <main class="mt-3">
        <div class="row">
            <div class="col-9">
                <div class="row">
                    <div class="col">
                        <div class="card">
                            <div class="card-header">
                                Saldo liberado
                            </div>
                            <div class="card-body">
                                <h3 class="fw-light">R$ 100,00</h3>
                            </div>
                        </div>
                    </div>

                    <div class="col">
                        <div class="card">
                            <div class="card-header">
                                Saldo bloqueado
                            </div>
                            <div class="card-body">
                                <h3 class="fw-light">R$ 100,00</h3>
                            </div>
                        </div>
                    </div>

                    <div class="col">
                        <div class="card">
                            <div class="card-header">
                                Saldo futuro
                            </div>
                            <div class="card-body">
                                <h3 class="fw-light">R$ 100,00</h3>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row mt-3">
                    <div class="col-12">
                        <TransactionList Transactions="Transactions" />
                    </div>
                </div>
            </div>
        </div>
    </main>
</GuaranteedWallet>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthState { get; set; }

    public bool UserHasWallet { get; set; }

    public IEnumerable<WalletTransaction> Transactions { get; set; } = new List<WalletTransaction>();

    protected override async Task OnInitializedAsync()
    {
        var userId = Convert.ToInt64(UserManager.GetUserId((await AuthState).User));
        var wallet = await AccountService.FindUserAccountsAsync(userId);
    }
}
